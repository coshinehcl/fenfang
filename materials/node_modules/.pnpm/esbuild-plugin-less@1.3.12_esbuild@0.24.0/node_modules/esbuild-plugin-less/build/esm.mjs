import{promises as b}from"fs";import g from"path";import w from"less";import u from"fs";import c from"path";var v=/@import.*?["']([^"']+)["'].*?/,y=/@import.*?["']([^"']+)["'].*?/g,R=/(?:\/\*(?:[\s\S]*?)\*\/)|(\/\/(?:.*)$)/gm,S=[".css",".less"];function f(t,r=[],n=new Set){try{if(n.has(t))return[];n.add(t);let i=c.dirname(t),m=(u.readFileSync(t).toString("utf8").replace(R,"").match(y)||[]).map(e=>e.match(v)[1]).filter(e=>!!e).map(e=>{let o=c.resolve(i,c.extname(e)?e:`${e}.less`);if(!u.existsSync(o))for(let p=0;p<r.length;p++){let d=c.resolve(r[p],c.extname(e)?e:`${e}.less`);if(u.existsSync(d)){o=d;break}}return o});return m.reduce((e,o)=>[...e,...f(o,r,n)],m).filter(e=>S.includes(c.extname(e).toLowerCase()))}catch{return[]}}function x(t){let r=t.extract.filter(i=>i),n=r.length===3?r[1]:r[0];return{text:t.message,location:{namespace:"file",file:t.filename,line:t.line,column:t.column,lineText:n}}}function F(t={},r={}){return{name:"less-loader",setup:n=>{let i=r.filter;n.onResolve({filter:i||/\.less$/,namespace:"file"},async s=>{let a=(await n.resolve(s.path,{kind:s.kind,importer:s.importer,resolveDir:s.resolveDir,pluginData:s.pluginData})).path;return{path:a,watchFiles:[a,...f(a,t.paths||[])]}}),n.onLoad({filter:i||/\.less$/,namespace:"file"},async s=>{let l=await b.readFile(s.path,"utf-8"),a=g.dirname(s.path),h=g.basename(s.path).endsWith(".module.less")?"local-css":"css",e={filename:s.path,relativeUrls:!0,...t,paths:[...t.paths||[],a]};try{return{contents:(await w.render(l,e)).css,loader:h,resolveDir:a}}catch(o){return{errors:[x(o)],resolveDir:a}}})}}}export{F as lessLoader};
